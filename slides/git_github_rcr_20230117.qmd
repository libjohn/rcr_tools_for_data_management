---
title: "Git & GitHub"
subtitle: "Version Control as a tool for Data Management"

author: 
  - name: John R Little
    affiliations:
      - name: Duke University
      - department: Center for Data & Vizualization Sciences

date: 'today'
# date-modified: 'today'
date-format: long

logo:  images/rfun.png

format: 
  revealjs: 
    theme: [solarized, mystyles/custom.scss]
    footer: "CC BY 4.0 John R Little"
    license: CC BY

editor: source
---

## Version control

- Manage how computers files change over time

## git 

- Git is one of the most popular. There are other version control systems.  
- Free open-source application
- Scalable - works with any size project
    - Linux is a world-wide project, spanning time-zones and languages
- Git is a file repository, or repo - repositories exist for many reasons
- Git and GitHub are not the same thing.  Symbiotic cousins

## Track how and project directories change

:::: {.columns}

::: {.column width="60%"}

- Tell the story of your project
- Who, What, and When files change.  (and Why, How)
    
:::

::: {.column width="40%"}
    
![](images/versioning.png)

:::

::::

- In this way we 
    - Can tell the story of our project
    - Time-travel – rolling-back to an earlier state of the entire project

## Experiment

- Through a feature called a branch
- Make replica copies of the git repo
- Alter and experiment 
- Merge (or delete) the branch
- dev/prod

## File types

- Any computer file
- In practice:  text documents and scripts work best
    - HTML, CSS, Markdown, SVG files, CSV files,
- Voluminous files 
    - Can be managed with adjacent processes (databases, or other)
    - Administrative overhead is always a concern:  KISS
- Final documents, posters etc
    - Although, reproducible best practice implies deriving reports from code.

## Profile and Share

- Remotes are shared/distributed via Hubs (GitHub, GitLab, BitBucket)
    - Distribution, Collaboration, Project Management, Pull-Request, etc.


- Other hubs already mentioned
    - but also Duke’s instance:  gitlab.oit.duke.edu

## GitHub

- A place to store and host git repositories

- More than a repo host
  - VMs 
  - Project management
      - Access control, task lists, bug tracking, wiki documentation, Kanban planning
      
## How does this work

- Clone my repo (or Fork) [difference? permissions!]
- My repo is public
- Code collaboration via Pull-Requests
- Repo editor resolves PRs
- Via version (or releases). Can synchronize **file repo** with **archival repo** for milestones such as an accepted article

## Fin {transition="zoom"}

::: {layout="[[-1], [1, 5]]"}
![](images/rfun.png)

John R Little\
Data Science Librarian\
[Center for Data & Visualization Sciences\
Duke University Libraries]{.muted .mediumtext}\
[https://JohnLittle.info ● https://Rfun.library.duke.edu ● https://Library.duke.edu/data]{.muted .smalltext}
:::

<center><i class="fab fa-creative-commons fa-2x"></i> <i class="fab fa-creative-commons-by fa-2x"></i>\
[Creative Commons: Attribution 4.0 ● https://creativecommons.org/licenses/by-nc/4.0]{.muted .smalltext}</center>

::: footer
:::


